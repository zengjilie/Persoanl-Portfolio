{"version":3,"sources":["fonts/Baloo_Paaji_2/BalooPaaji2-ExtraBold.ttf","components/Tabbar.jsx","components/Card.jsx","components/ArrowIcon.jsx","components/Return.jsx","App.js","index.js"],"names":["Tabbar","props","className","id","onClick","create","clean","Card","useState","mode","setMode","inputText","setInputText","isEditable","setIsEditable","style","borderRadius","outline","edit","textDecoration","close","onInput","event","target","innerText","contentEditable","suppressContentEditableWarning","text","ArrowIcon","t","viewBox","version","xmlns","width","height","d","fill","Return","window","scrollTo","top","behavior","App","notes","setNotes","prevNotes","map","item","index","filter","ReactDOM","render","document","getElementById"],"mappings":"iQAAe,I,MCgDAA,MA5Cf,SAAgBC,GAaZ,OACI,sBAAKC,UAAY,mBAAjB,UAEI,sBAAKA,UAAY,aAAjB,UACI,wBACAC,GAAK,IACLD,UAAY,gBACZE,QAAWH,EAAMI,OAHjB,oBAOA,qBAAKH,UAAY,yBAGrB,sBAAMA,UAAY,aAAlB,UACI,wBACAC,GAAK,IACLD,UAAY,gBACZE,QAAWH,EAAMK,MAHjB,mBAOA,qBAAKJ,UAAY,yBAIrB,qBAAKA,UAAU,6B,YC0BZK,MAhEf,SAAcN,GAKV,MAAwBO,mBAAS,KAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KA4BA,OACI,sBAAKZ,UAAY,iBAAiBa,OAAwB,IAAfF,EANvB,CACpBG,aAAc,OACdC,QAAS,mBAIwE,KAAjF,UACI,sBAAKf,UAAY,0BAAjB,UACI,sBAAKA,UAAY,wBAAjB,UAEI,qBAAKA,UAAY,cAAjB,SAAgCD,EAAME,GAAK,IAC3C,wBACID,UAAY,cACZE,QAlCpB,WACgB,MAATK,GACCK,GAAc,GACdJ,EAAQ,KAGRT,EAAMiB,KAAKP,EAAWV,EAAME,KACd,MAATM,IACLK,GAAc,GACdJ,EAAQ,OA0BIK,OAAwB,IAAfF,EAAsB,CAACM,eAAe,aAAa,KAHhE,SAGuEV,IACvE,wBACIP,UAAY,cACZE,QArBpB,WACIH,EAAMmB,MAAMnB,EAAME,KAkBN,kBAKJ,mBACID,UAAY,aACZmB,QA9BhB,SAAqBC,GACjBV,EAAaU,EAAMC,OAAOC,YA8BdC,gBAAmBZ,EACnBa,gCAAgC,EAJpC,SAKEzB,EAAM0B,UAEZ,qBAAKzB,UAAY,wB,KCtDd0B,MAPf,WAEI,OACI,qBAAMC,EAAE,gBAAgB3B,UAAU,OAAO4B,QAAQ,gBAAgBC,QAAQ,MAAMC,MAAM,6BAA6B,OAAK,OAAOC,MAAM,KAAKC,OAAO,KAAhJ,SAAqJ,sBAAMC,EAAE,+JAA+J,OAAK,OAAOC,KAAK,e,MCctUC,MAff,WAQI,OACI,wBAAQnC,UAAY,gBAAgBE,QAPxC,WACIkC,OAAOC,SAAS,CACZC,IAAK,EACLC,SAAU,YAId,SACI,cAAC,EAAD,CAAWvC,UAAY,a,MCiDpBwC,MA3Df,WAEE,MAA0BlC,mBAAS,IAAnC,mBAAMmC,EAAN,KAAaC,EAAb,KAQA,SAAS1B,EAAKP,EAAWR,GACvByC,GAAS,SAACC,GACR,OAAOA,EAAUC,KAAI,SAACC,EAAMC,GAC1B,OAAGA,IAAU7C,EACJQ,EAEAoC,QAUf,SAAS3B,EAAMjB,GACbyC,GAAS,SAACC,GACR,OAAOA,EAAUI,QAAO,SAACF,EAAMC,GAC7B,OAAOA,IAAU7C,QAOvB,OACE,sBAAKD,UAAY,MAAjB,UACE,cAAC,EAAD,CACEG,OAnCN,WACEuC,GAAS,SAACC,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsB,sBAkCpBvC,MAlBN,WACEsC,EAAS,OAmBP,qBAAK1C,UAAY,WAAjB,SACGyC,EAAMG,KAAI,SAACC,EAAMC,GAAP,OACT,cAAC,EAAD,CACE5B,MAASA,EACTF,KAAQA,EAERf,GAAM6C,EACNrB,KAAQoB,GAFDC,QAOb,cAAC,EAAD,QCpDNE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.43c429c6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/BalooPaaji2-ExtraBold.3b88855c.ttf\";","import React from \"react\";\nimport \"../styles/tabbar.css\";\nimport \"../fonts/Baloo_Paaji_2/BalooPaaji2-ExtraBold.ttf\"\n\nfunction Tabbar(props){\n    //click show inner graph\n    //do not fix the height in cellphone mode\n    //fix the height in desktop mode\n    //use props\n\n    //desktop restyling\n    // const {innerHeight:height, innerWidth:width} = window;\n\n    // const buttonStyle = width > 600 ? { \n    //     height: `${height-40}px`\n    // }:{height:\"74px\"};\n\n    return (\n        <div className = \"button-container\" >\n            \n            <div className = \"button-box\">\n                <button \n                id = \"1\" \n                className = \"tabbar-button\" \n                onClick = {props.create}>\n                    CREATE\n                </button>\n\n                <div className = \"button-background\"></div>\n            </div>\n\n            <div  className = \"button-box\">\n                <button \n                id = \"2\" \n                className = \"tabbar-button\" \n                onClick = {props.clean}>\n                    CLEAN\n                </button>\n\n                <div className = \"button-background\"></div>\n            </div>            \n\n            {/* in order to use opacity, we need to use a seperate div */}\n            <div className=\"container-background\"></div>   \n        </div>\n    );\n};\n\nexport default Tabbar;\n","import React,{useState} from \"react\";\nimport \"../styles/card.css\";\nimport \"../fonts/Baloo_Paaji_2/BalooPaaji2-ExtraBold.ttf\";\nimport { isCompositeComponentWithType } from \"react-dom/test-utils\";\n\nfunction Card(props){\n    //upon creation, id = index, model = D\n    //ready to type input, when done\n    //click D and input bar disappear, while the content in input bar rendered by <p> ele\n    //click E and \n    const [mode, setMode] = useState(\"D\");\n\n    const [inputText, setInputText] = useState(\"\");\n\n    const [isEditable, setIsEditable] = useState(true);\n\n    function handleMode(){\n        if(mode === \"D\"){\n            setIsEditable(false);\n            setMode(\"E\");\n            //when It's in done mode, the D letter will move up and down\n            //update the value in the particular note\n            props.edit(inputText, props.id);\n        }else if(mode === \"E\"){\n            setIsEditable(true);\n            setMode(\"D\");\n        }\n    }\n\n    function handleInput(event){\n        setInputText(event.target.innerText);\n    }\n\n    function handleClose(){\n        props.close(props.id);\n    }\n\n    const backgroundStyle = {\n        borderRadius: \"50px\",\n        outline: \"solid 3px white\"\n    }\n\n    return (\n        <div className = \"card-container\" style = {isEditable === true ? backgroundStyle:null}>\n            <div className = \"card-elements-container\">\n                <div className = \"card-button-container\">\n                    {/* <div className = \"card-id\">{props.id}</div> */}\n                    <div className = \"card-button\">{props.id + 1}</div>\n                    <button \n                        className = \"card-button\" \n                        onClick = {handleMode}\n                        style = {isEditable === true ? {textDecoration:\"underline\"}:null}>{mode}</button>\n                    <button \n                        className = \"card-button\" \n                        onClick = {handleClose}>C</button>\n                </div>\n                \n                <p\n                    className = \"card-input\" \n                    onInput = {handleInput}\n                    contentEditable = {isEditable}\n                    suppressContentEditableWarning={true}\n                >{props.text}</p>\n            </div>\n            <div className = \"card-background\"></div>\n        </div>\n    );\n}\n\nexport default Card;","import React from \"react\";\nimport \"../styles/arraw-icon.css\"\n\nfunction ArrowIcon(){\n    \n    return(\n        <svg  t=\"1636150566807\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2365\" width=\"20\" height=\"20\"><path d=\"M694.272 809.024l-295.808-286.848 295.36-274.752a32 32 0 0 0-43.616-46.848l-320 297.696a32 32 0 0 0-0.512 46.4l320 310.304a32.032 32.032 0 0 0 44.576-45.952\" p-id=\"2366\" fill=\"#ffffff\"></path></svg>\n    );\n}\n\nexport default ArrowIcon;\n\n","import React from \"react\";\nimport ArrowIcon from \"./ArrowIcon\";\nimport \"../styles/return.css\";\nimport \"../styles/arraw-icon.css\";\n\nfunction Return(){\n    \n    function scrollToTop(){\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n        })\n    }\n    return (\n        <button className = \"return-button\" onClick = {scrollToTop}>\n            <ArrowIcon className = \"arrow\"/>\n        </button>\n    );\n}\n\nexport default Return;","import React,{useState}from \"react\";\nimport Tabbar from \"./components/Tabbar\";\nimport Card from \"./components/Card\";\nimport Return from \"./components/Return\";\nimport \"./styles/app.css\";\nfunction App() {\n  //keep all the notes(data)\n  const[notes, setNotes]  = useState([]);\n  \n  function create(){\n    setNotes((prevNotes) =>{\n      return [...prevNotes, \"Write here...\"]\n    })\n  }\n\n  function edit(inputText, id){\n    setNotes((prevNotes) => {\n      return prevNotes.map((item, index) => {\n        if(index === id){\n          return inputText;\n        }else{\n          return item;\n        }\n      })\n    });\n  }\n\n  function clean(){\n    setNotes([]);\n  }\n\n  function close(id){\n    setNotes((prevNotes) => {\n      return prevNotes.filter((item, index) => {\n        return index !== id;\n      })\n\n    })\n \n  }\n\n  return (\n    <div className = \"App\">\n      <Tabbar \n        create = {create} \n        clean = {clean}\n      />\n      <div className = \"card-box\">\n        {notes.map((item, index) => \n          <Card \n            close = {close} \n            edit = {edit}\n            key = {index}\n            id = {index}\n            text = {item}\n          /> \n        )}\n      </div>\n\n      <Return/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n//get the veiwport height\n//set root height to veiwport height\n\nReactDOM.render(\n  <App></App>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}